import{DEFAULT_SETTINGS}from"./config.js";import{validateSettings,validateMode}from"./validate.js";import{escapeString as _escapeString}from"./helpers.js";import{initState,encryptMsg,decryptMsg,generateKey as _generateKey,generateNonce as _generateNonce}from"./lc4.js";export function encrypt(a){a=Object.assign({},DEFAULT_SETTINGS,a),a.mode=a.mode.toLowerCase(),validateMode(a),a.message&&(a.message=_escapeString(a.message,a.mode)),a.headerData&&(a.headerData=_escapeString(a.headerData,a.mode)),validateSettings(a);let b={state:initState(a.key,a.mode),marker:{i:0,j:0},mode:a.mode};return a.nonce&&encryptMsg(b,a.nonce,a.verbose),a.headerData&&encryptMsg(b,a.headerData,a.verbose),encryptMsg(b,a.message+(a.signature||""),a.verbose)}export function decrypt(a){a=Object.assign({},DEFAULT_SETTINGS,a),a.mode=a.mode.toLowerCase(),validateMode(a),a.headerData&&(a.headerData=_escapeString(a.headerData,a.mode)),validateSettings(a);let b={state:initState(a.key,a.mode),marker:{i:0,j:0},mode:a.mode};a.nonce&&encryptMsg(b,a.nonce,a.verbose),a.headerData&&encryptMsg(b,a.headerData,a.verbose);let c=decryptMsg(b,a.message,a.verbose);if(a.signature&&!c.endsWith(_escapeString(a.signature,a.mode)))throw new Error("Invalid signature");return c}export function generateKey(a,b="lc4"){return _generateKey(a,b)}export function generateNonce(a,b="lc4"){return _generateNonce(a,b)}export function escapeToLC4(a){return _escapeString(a,"lc4")}export function escapeToLS47(a){return _escapeString(a,"ls47")}export function escapeString(a,b){return _escapeString(a,b)}
//# sourceMappingURL=main.js.map