{"version":3,"sources":["../src/validate.js"],"names":["validLC4","ALPHABET","validateSettings","settings","message","TypeError","key","length","nonce","signature"],"mappings":"AACA,OAASA,QAAT,KAAyB,cAAzB,CACA,OAASC,QAAT,KAAyB,aAAzB,CAeA,MAAO,SAASC,CAAAA,gBAAT,CAA0BC,CAA1B,CAAoC,CACvC,GAAI,CAACA,CAAQ,CAACC,OAAd,CACI,KAAM,IAAIC,CAAAA,SAAJ,CAAc,uCAAd,CAAN,CADJ,IAEO,IAAI,CAACF,CAAQ,CAACG,GAAd,CACH,KAAM,IAAID,CAAAA,SAAJ,CACF,2EAEIJ,QAHF,CAAN,CADG,IAMA,IAAIE,CAAQ,CAACG,GAAT,CAAaC,MAAb,GAAwBN,QAAQ,CAACM,MAArC,CACH,KAAM,IAAIF,CAAAA,SAAJ,CAAc,kBAAd,CAAN,CADG,IAEA,IAAI,CAACL,QAAQ,CAAC,CAAC,GAAGG,CAAQ,CAACG,GAAb,CAAD,CAAb,CACH,KAAM,IAAID,CAAAA,SAAJ,CACF,mGAEIJ,QAHF,CAAN,CADG,IAMA,IACHE,CAAQ,CAACK,KAAT,GACC,CAACR,QAAQ,CAAC,CAAC,GAAGG,CAAQ,CAACK,KAAb,CAAD,CAAT,EAA0D,CAAxB,CAAAL,CAAQ,CAACK,KAAT,CAAeD,MADlD,CADG,CAIH,KAAM,IAAIF,CAAAA,SAAJ,CACF,gEAEIJ,QAFJ,CAGI,0CAJF,CAAN,CAJG,IAUA,IACHE,CAAQ,CAACM,SAAT,GACC,CAACT,QAAQ,CAAC,CAAC,GAAGG,CAAQ,CAACM,SAAb,CAAD,CAAT,EAAkE,EAA5B,CAAAN,CAAQ,CAACM,SAAT,CAAmBF,MAD1D,CADG,CAIH,KAAM,IAAIF,CAAAA,SAAJ,CACF,wEAEIJ,QAFJ,CAGI,2CAJF,CAOb","sourcesContent":["/** @module lc4/validate */\nimport { validLC4 } from \"./helpers.js\";\nimport { ALPHABET } from \"./config.js\";\n\n/**\n * Validate encryption/decryption LC4 settings\n * @param {Object} settings LC4 settings message\n * @param {String} settings.message valid LC4 string\n * @param {String} settings.key valid LC4 string\n * @param {String} [settings.signature=null] valid LC4 string (at least 10\n * characters long)\n * @param {String} [settings.headerData=null] valid LC4 string\n * @param {String} [settings.nonce=null] valid LC4 string (at least 6 characters\n * long)\n * @throws {TypeError} When message and/or key is missing or if invalid value\n * (invalid LC4 string) is passed\n */\nexport function validateSettings(settings) {\n    if (!settings.message) {\n        throw new TypeError(\"You must specify a message to encrypt\");\n    } else if (!settings.key) {\n        throw new TypeError(\n            \"You must specify a (valid) key!\\n\" +\n                \"You may only use following characters: \" +\n                ALPHABET\n        );\n    } else if (settings.key.length !== ALPHABET.length) {\n        throw new TypeError(\"Key is too short\");\n    } else if (!validLC4([...settings.key])) {\n        throw new TypeError(\n            \"Keyword for key generation contains invalid characters!\\n\" +\n                \"You may only use following characters: \" +\n                ALPHABET\n        );\n    } else if (\n        settings.nonce &&\n        (!validLC4([...settings.nonce]) || settings.nonce.length < 6)\n    ) {\n        throw new TypeError(\n            \"Invalid nonce!\\n\" +\n                \"Nonce may only contain following characters: \" +\n                ALPHABET +\n                \" and must be at least 6 characters long.\"\n        );\n    } else if (\n        settings.signature &&\n        (!validLC4([...settings.signature]) || settings.signature.length < 10)\n    ) {\n        throw new TypeError(\n            \"Invalid signature!\\n\" +\n                \"Signature may only contain following characters: \" +\n                ALPHABET +\n                \" and must be at least 10 characters long.\"\n        );\n    }\n}\n"],"file":"validate.js"}