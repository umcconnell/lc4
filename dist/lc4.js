import{ALPHABET,GRIDSIZE}from"./config.js";import{shuffle,randomElement,shiftRowRight,shiftColumnDown,position,printState,validLC4}from"./helpers.js";export function generateKey(a=!1){if(a&&!validLC4([...a]))throw new Error("Keyword for key generation contains invalid characters!\nYou may only use following characters: "+ALPHABET);let b=shuffle([...ALPHABET].filter(b=>!a||-1<a.indexOf(b))).join("");return(a?a:"")+b}export function generateNonce(a=10){if(6>a)throw new Error("Nonce must be at least 6 characters long");return Array(a).fill(0).map(()=>randomElement([...ALPHABET])).join("")}export function initState(a){let b=Array(GRIDSIZE).fill(0).map(()=>Array(GRIDSIZE).fill(0));for(let c=0;c<ALPHABET.length;c++)b[Math.floor(c/GRIDSIZE)][c%GRIDSIZE]=ALPHABET.indexOf(a[c]);return b}export function encryptMsg({state:a,marker:b},c,d=!1){return d&&(console.log(`Encrypting: ${c}`),console.log("step: 0"),printState(a.slice(),{row:-1,col:-1},b)),[...c].map((c,e)=>{let f=ALPHABET.indexOf(c),[g,h]=position(f,a),i=(g+Math.floor(a[b.i][b.j]/GRIDSIZE))%GRIDSIZE,j=(h+a[b.i][b.j]%GRIDSIZE)%GRIDSIZE,k=a[i][j];return shiftRowRight(a,g,b),i===g&&(j=(j+1)%GRIDSIZE),shiftColumnDown(a,j,b),j===h&&(g=(g+1)%GRIDSIZE),b.i=(b.i+Math.floor(k/GRIDSIZE))%GRIDSIZE,b.j=(b.j+k%GRIDSIZE)%GRIDSIZE,d&&(console.log(`step: ${e+1}`),console.log(Array(3*GRIDSIZE-2).fill("-").join("")),printState(a.slice(),{row:g,col:j},b),console.log(Array(3*GRIDSIZE-2).fill("-").join("")),console.log(`pt: \x1b[31m${c}\x1b[0m  ct: \x1b[31m${ALPHABET[k]}\x1b[0m`,"\n")),ALPHABET[k]}).join("")}export function decryptMsg({state:a,marker:b},c,d){return d&&(console.log(`Decrypting: ${c}`),console.log("step: 0"),printState(a.slice(),{row:-1,col:-1},b)),[...c].map((c,e)=>{let f=ALPHABET.indexOf(c),[g,h]=position(f,a),i=(g-Math.floor(a[b.i][b.j]/GRIDSIZE))%GRIDSIZE,j=(h-a[b.i][b.j]%GRIDSIZE)%GRIDSIZE;0>i&&(i+=GRIDSIZE),0>j&&(j+=GRIDSIZE);let k=a[i][j];return shiftRowRight(a,i,b),g===i&&(h=(h+1)%GRIDSIZE),shiftColumnDown(a,h,b),h===j&&(i=(i+1)%GRIDSIZE),b.i=(b.i+Math.floor(f/GRIDSIZE))%GRIDSIZE,b.j=(b.j+f%GRIDSIZE)%GRIDSIZE,d&&(console.log(`step: ${e+1}`),console.log(Array(3*GRIDSIZE-2).fill("-").join("")),printState(a.slice(),{row:i,col:h},b),console.log(Array(3*GRIDSIZE-2).fill("-").join("")),console.log(`ct: \x1b[31m${c}\x1b[0m  pt: \x1b[31m${ALPHABET[k]}\x1b[0m`,"\n")),ALPHABET[k]}).join("")}
//# sourceMappingURL=lc4.js.map